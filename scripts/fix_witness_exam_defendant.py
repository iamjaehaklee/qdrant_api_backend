#!/usr/bin/env python3
"""
Fix 증인신문조서_피고본인 chunk files with realistic content.
Addresses issues: duplicate strings, unrealistic paragraph counts, content mismatch with summary.
"""

import json
import os

# Base directory
BASE_DIR = "/Users/jaehaklee/qdrant_api_backend/__test__/sample_generated/부동산소유권등기소송/ocr_chunks"

# Generate realistic witness examination content for 16 pages
# Based on summary: 피고 이영희, 2024년 11월 5일, 보충합의서, 공인중개사, 필적감정, 모순된 진술

WITNESS_CONTENT = {
    1: [
        "증인신문조서",
        "사건 2024가합12345 부동산소유권이전등기",
        "피고 본인 증인신문조서",
        "증인: 이영희 (피고)",
        "2024년 11월 5일 제3회 변론기일",
        "재판장: 증인의 성명과 생년월일을 말씀해 주십시오.",
        "증인: 이영희, 1978년 6월 10일생입니다.",
        "재판장: 원고 김철수씨와는 어떤 관계입니까?",
        "증인: 부동산 매매 계약의 매도인과 매수인 관계입니다.",
    ],
    2: [
        "재판장: 2024년 3월 15일 최초 계약 체결 당시 상황에 대해 진술하시기 바랍니다.",
        "증인: 강남부동산공인중개사사무소에서 매매계약서를 작성하였습니다.",
        "증인: 계약금 5천만 원을 그 자리에서 받았습니다.",
        "재판장: 그 후 보충합의서를 작성한 것으로 알고 있는데요?",
        "증인: 네, 2024년 3월 20일에 보충합의서를 작성하였습니다.",
        "증인: 원고가 잔금 지급 전에 먼저 등기를 이전해달라고 요청했습니다.",
        "재판장: 그 보충합의서는 어디에서 작성하였습니까?",
        "증인: 같은 강남부동산공인중개사사무소에서 작성했습니다.",
    ],
    3: [
        "재판장: 보충합의서 작성 당시 공인중개사가 입회했습니까?",
        "증인: 네, 박중개이 공인중개사가 입회하였습니다.",
        "재판장: 그런데 원고가 제출한 공인중개사 확인서에는 그런 문서가 없다고 나와 있습니다.",
        "재판장: 이에 대해 어떻게 설명하시겠습니까?",
        "증인: 아... 잘 기억이 안 나는데요.",
        "증인: 그날은 박 중개사가 잠깐 자리를 비웠던 것 같습니다.",
        "증인: 사무실 직원이 있었습니다.",
        "재판장: 그 직원의 성명을 말씀해 주십시오.",
    ],
    4: [
        "증인: 이름은 잘 기억이 안 납니다.",
        "증인: 젊은 여직원이었던 것 같습니다.",
        "재판장: 성별만 기억나고 이름은 기억나지 않는다는 말씀이십니까?",
        "증인: 네, 그 당시 급하게 작성해서 이름까지는 확인하지 못했습니다.",
        "재판부: 증인은 중요한 부동산 거래 문서를 작성하면서 입회인 이름도 확인하지 않았다는 것입니까?",
        "증인: 그냥 공인중개사 사무실 직원이면 될 줄 알았습니다.",
        "재판장: 다음 질문으로 넘어가겠습니다.",
        "재판장: 보충합의서의 서명은 누가 하였습니까?",
    ],
    5: [
        "증인: 제가 직접 서명하였습니다.",
        "재판장: 원고측 서명도 원고가 직접 하였습니까?",
        "증인: 그렇게 알고 있습니다.",
        "재판장: 그런데 필적감정 결과를 보면 원고측 서명이 원고의 필적과 일치하지 않는다고 나왔습니다.",
        "재판장: 이것이 사실이라면 누가 대신 서명했다고 생각하십니까?",
        "증인: 원고가 대리인을 시켰을 것입니다.",
        "재판장: 그 대리인의 신원을 아십니까?",
        "증인: 잘 모르겠습니다.",
    ],
    6: [
        "재판장: 원고가 대리인을 시켰다면 위임장이나 동의가 있었어야 하지 않습니까?",
        "증인: 그건... 저는 잘 모르겠습니다.",
        "재판장: 보충합의서 작성 당일 원고 본인은 참석했습니까?",
        "증인: 아, 그건 참석하지 않았던 것 같습니다.",
        "재판장: 아까는 원고가 작성했다고 하지 않으셨습니까?",
        "증인: 아니, 그게... 제 기억이 혼동된 것 같습니다.",
        "재판부: 증인의 진술이 계속 바뀌고 있는데요.",
        "재판장: 정확히 말씀해 주시기 바랍니다.",
    ],
    7: [
        "증인: 죄송합니다. 시간이 오래 지나서 기억이 명확하지 않습니다.",
        "재판장: 그렇다면 보충합의서 자체가 위조되었을 가능성도 있지 않습니까?",
        "증인: 아닙니다. 제 서명은 분명히 제가 한 것입니다.",
        "재판장: 그러면 원고측 서명은 누가 했는지 확인했습니까?",
        "증인: 당시에는 확인하지 못했습니다.",
        "원고측 변호사: 반대신문 하겠습니다.",
        "원고측 변호사: 증인은 2024년 3월 20일 어디에 있었습니까?",
        "증인: 강남부동산공인중개사사무소에 있었다고 말씀드렸습니다.",
    ],
    8: [
        "원고측 변호사: 그날 오전과 오후 중 언제였습니까?",
        "증인: 오후 2시경이었습니다.",
        "원고측 변호사: 그런데 공인중개사 박중개이의 진술에 의하면 3월 20일은 사무실이 휴무였다고 합니다.",
        "원고측 변호사: 이에 대해 어떻게 설명하시겠습니까?",
        "증인: 그건... 제가 날짜를 잘못 기억했을 수도 있습니다.",
        "원고측 변호사: 아까는 3월 20일이라고 확실하게 말씀하셨는데요.",
        "증인: 3월 중순이었다는 것은 확실한데 정확한 날짜는 기억이 잘 안 납니다.",
        "원고측 변호사: 증인의 휴대폰 위치정보를 확인한 결과 3월 20일에는 강남이 아닌 인천에 있었습니다.",
    ],
    9: [
        "증인: 그날 인천에 갔던 일정도 있었습니다.",
        "원고측 변호사: 오후 2시에 인천에 있었다면 강남 공인중개사 사무소에 있을 수 없지 않습니까?",
        "증인: 오전에 갔었을 수도 있습니다.",
        "원고측 변호사: 아까는 오후 2시라고 하지 않으셨습니까?",
        "증인: 제 기억이 혼란스럽습니다.",
        "원고측 변호사: 결국 보충합의서는 증인이 위조한 것 아닙니까?",
        "증인: 아닙니다. 절대 아닙니다.",
        "원고측 변호사: 그렇다면 왜 진술이 이렇게 계속 바뀝니까?",
    ],
    10: [
        "증인: 시간이 오래 지나서 기억이 명확하지 않을 뿐입니다.",
        "원고측 변호사: 계약금 5천만 원을 받았다고 하셨는데 입금 기록이 있습니까?",
        "증인: 현금으로 받았습니다.",
        "원고측 변호사: 그렇게 큰 금액을 현금으로 받고 영수증도 없습니까?",
        "증인: 매매계약서에 영수 표시가 되어 있습니다.",
        "원고측 변호사: 실제 현금 수령 증거는 없다는 말씀이군요.",
        "증인: 계약서가 증거입니다.",
        "원고측 변호사: 증인은 그 돈을 어떻게 사용하셨습니까?",
    ],
    11: [
        "증인: 생활비로 사용했습니다.",
        "원고측 변호사: 은행 입금 기록이나 지출 내역이 있습니까?",
        "증인: 현금이라 그런 기록은 없습니다.",
        "원고측 변호사: 5천만 원을 현금으로 보관하고 사용했다는 것이 합리적입니까?",
        "증인: 제 방식대로 한 것입니다.",
        "재판장: 피고측 변호사, 재신문 있으십니까?",
        "피고측 변호사: 네, 재신문하겠습니다.",
        "피고측 변호사: 증인은 보충합의서에 자발적으로 서명하셨습니까?",
    ],
    12: [
        "증인: 네, 자발적으로 서명했습니다.",
        "피고측 변호사: 원고로부터 강요나 협박을 받은 적은 없습니까?",
        "증인: 없습니다.",
        "피고측 변호사: 그렇다면 보충합의서의 내용에 동의하신다는 말씀입니까?",
        "증인: 네, 그 당시에는 동의했습니다.",
        "재판장: '그 당시에는'이라는 말은 지금은 동의하지 않는다는 뜻입니까?",
        "증인: 지금 생각해보니 제게 불리한 내용이 많아서요.",
        "재판장: 알겠습니다. 다른 질문 있으십니까?",
    ],
    13: [
        "피고측 변호사: 증인이 기억하기로 보충합의서 작성 당시 원고가 어떤 말을 했습니까?",
        "증인: 등기를 먼저 넘겨달라고 했습니다.",
        "피고측 변호사: 그 요청에 증인은 어떻게 반응했습니까?",
        "증인: 처음에는 거절했으나 원고가 계속 요청해서 동의했습니다.",
        "피고측 변호사: 그럼 원고의 강력한 요청에 의한 것이군요.",
        "원고측 변호사: 이의 있습니다. 유도신문입니다.",
        "재판장: 인정합니다. 피고측 변호사는 유도신문을 자제해 주십시오.",
        "피고측 변호사: 다른 질문 없습니다.",
    ],
    14: [
        "재판장: 재판부에서 몇 가지 더 확인하겠습니다.",
        "재판장: 증인은 현재 해당 부동산에 거주하고 계십니까?",
        "증인: 네, 거주하고 있습니다.",
        "재판장: 원고가 잔금을 지급하지 않았다면 왜 계속 거주하고 계십니까?",
        "증인: 잔금을 받지 못했으므로 소유권은 아직 제게 있다고 생각합니다.",
        "재판장: 하지만 보충합의서에는 등기 먼저 이전한다고 되어 있지 않습니까?",
        "증인: 그 합의서가 유효한지 의문입니다.",
        "재판장: 아까는 자발적으로 서명했다고 하지 않으셨습니까?",
    ],
    15: [
        "증인: 네, 서명은 했지만 내용을 제대로 이해하지 못했습니다.",
        "재판장: 부동산 매매 경험이 처음이십니까?",
        "증인: 아니요, 이전에도 몇 차례 있었습니다.",
        "재판장: 그렇다면 계약서 내용을 이해하는 것이 어렵지 않았을 텐데요.",
        "증인: 그때는 급하게 진행되어서 꼼꼼히 확인하지 못했습니다.",
        "재판장: 알겠습니다. 증인신문을 마치겠습니다.",
        "재판장: 다음 기일은 2024년 12월 10일 오전 10시로 지정합니다.",
        "재판장: 증인은 퇴정하셔도 됩니다.",
    ],
    16: [
        "증인 퇴정",
        "재판장: 양측 변호사께서는 다음 기일까지 추가 서면을 제출해 주시기 바랍니다.",
        "원고측 변호사: 네, 알겠습니다.",
        "피고측 변호사: 네, 제출하겠습니다.",
        "재판장: 그럼 오늘 변론은 여기서 마치겠습니다.",
        "폐정",
        "(증인신문조서 종료)",
        "",
    ]
}


def generate_paragraphs(page_num, page_content, file_id, chunk_num, page_idx_in_chunk):
    """Generate paragraph objects for a given page"""
    paragraphs = []
    base_y = 150.0
    y_increment = 60.0

    for i, text in enumerate(page_content):
        if not text.strip():  # Skip empty strings
            continue

        para = {
            "paragraph_id": f"para-{file_id:03d}-{chunk_num:03d}-{page_idx_in_chunk:03d}-{i}",
            "idx_in_page": i,
            "text": text,
            "page": page_num,
            "bbox": {
                "x": 180.0 + (i % 3) * 5,
                "y": base_y + i * y_increment,
                "width": 1200.0 + len(text) * 3,
                "height": 45 if len(text) < 50 else 50
            },
            "type": "heading" if any(keyword in text for keyword in ["증인신문조서", "사건", "재판장:", "증인 퇴정", "폐정"]) else "body",
            "confidence_score": round(0.90 + (i % 10) * 0.01, 2)
        }
        paragraphs.append(para)

    return paragraphs


def update_chunk_file(filename, pages, chunk_num):
    """Update a chunk file with realistic content"""
    filepath = os.path.join(BASE_DIR, filename)

    with open(filepath, 'r', encoding='utf-8') as f:
        data = json.load(f)

    # Generate paragraph_texts (plain text for each page)
    paragraph_texts = []
    for page in pages:
        page_content = WITNESS_CONTENT.get(page, [])
        paragraph_texts.extend(page_content)

    # Generate chunk_content with proper paragraph structure
    all_paragraphs = []
    for idx, page in enumerate(pages):
        page_content = WITNESS_CONTENT.get(page, [])
        paragraphs = generate_paragraphs(page, page_content, 42, chunk_num, idx)
        all_paragraphs.extend(paragraphs)

    # Update data
    data["paragraph_texts"] = paragraph_texts
    data["chunk_content"]["paragraphs"] = all_paragraphs

    # Write back
    with open(filepath, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    print(f"✅ Updated {filename}: {len(paragraph_texts)} texts, {len(all_paragraphs)} paragraphs")


# Update all chunks
chunk_configs = [
    ("증인신문조서_피고본인_p1-3.json", [1, 2, 3], 1),
    ("증인신문조서_피고본인_p3-5.json", [3, 4, 5], 2),
    ("증인신문조서_피고본인_p5-7.json", [5, 6, 7], 3),
    ("증인신문조서_피고본인_p7-9.json", [7, 8, 9], 4),
    ("증인신문조서_피고본인_p9-11.json", [9, 10, 11], 5),
    ("증인신문조서_피고본인_p11-13.json", [11, 12, 13], 6),
    ("증인신문조서_피고본인_p13-15.json", [13, 14, 15], 7),
    ("증인신문조서_피고본인_p15-16.json", [15, 16], 8),
]

print("🔧 Fixing 증인신문조서_피고본인 chunk files...\n")

for filename, pages, chunk_num in chunk_configs:
    update_chunk_file(filename, pages, chunk_num)

print("\n✅ All files updated successfully!")
print("\n📊 Summary:")
print("- Total chunks: 8")
print("- Total pages: 16")
print("- Content: Realistic witness examination with Q&A, cross-examination, contradictions")
print("- Matches summary: 보충합의서, 공인중개사, 필적감정, 모순된 진술")
